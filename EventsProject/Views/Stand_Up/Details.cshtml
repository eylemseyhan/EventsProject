@using EntityLayer.Concrete;
@model Event

@{
    ViewData["Title"] = "Etkinlik Detayları";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&family=Montserrat:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom styles */
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f7f7f7;
        }

        .event-detail-container {
            margin-top: 50px;
            padding: 0 15px;
        }

        .event-detail-wrapper {
            display: flex;
            justify-content: center;
            gap: 30px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .event-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
            border-radius: 8px;
        }

        .event-content {
            width: 60%;
        }

        .event-title {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .event-overview p {
            margin-bottom: 15px;
        }

        .event-location {
            margin-top: 20px;
        }

        .event-map iframe {
            width: 100%;
            height: 400px;
            border: 0;
        }

        .event-sidebar {
            width: 30%;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .listing-verify a,
        .listing-verify button {
            width: 100%;
            padding: 12px;
            text-align: center;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-weight: 600;
            display: inline-block;
            text-decoration: none;
        }

            .listing-verify a:hover,
            .listing-verify button:hover {
                background-color: #0056b3;
            }

        .opening-hours-widget {
            margin-top: 30px;
            background-color: #007bff;
            padding: 15px;
            border-radius: 8px;
        }

            .opening-hours-widget h6 {
                color: white;
                font-weight: 600;
            }

        .opening-hours li p {
            color: white;
            margin: 0;
        }
    </style>
</head>

<body>

    <!-- Preloader -->
    <div id="preloader">
        <div class="dorne-load"></div>
    </div>

    <section class="event-detail-container">
        <div class="event-detail-wrapper">

            <!-- Event Image -->
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="event-image">
                    <img src="@Model.ImageUrl" alt="Event Image" class="img-fluid">
                </div>
            }
             <!-- Google Map -->
                <div class="event-map">
                    <h3>Haritada Göster</h3>
                    @if (!string.IsNullOrEmpty(Model.LocationUrl))
                    {
                        <iframe src="@Model.LocationUrl" width="100%" height="400" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
                    }
                    else
                    {
                        <p>Harita bulunamadı.</p>
                    }
                </div>

            <!-- Event Details -->
            <div class="event-content">
                <h2 class="event-title">@Model.Title</h2>
                <div class="event-overview">
                    <p class="event-description">@Model.Description</p>
                    <p class="event-details">@Model.Details</p>
                    <p class="event-date">@Model.EventDate.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"))</p>
                </div>

                <!-- Event Location -->
                <div class="event-location">
                    <strong>Konum:</strong> @Model.Location
                </div>

               
            </div>

            <!-- Sidebar and Buy Ticket -->
            <div class="event-sidebar">
                <div class="listing-sidebar">

                    <div class="listing-verify">
                        <!-- Giriş Yap ve Bilet Al Butonu -->
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button class="btn dorne-btn w-100 opening-hours-btn"
                                    data-bs-toggle="modal"
                                    data-bs-target="#paymentModal"
                                    data-eventid="@Model.EventId"
                                    data-price="@ViewBag.TicketPrice">
                                <!-- Fiyatı data-price olarak ekliyoruz -->
                                <i class="fa fa-check pr-3"></i> Bilet Al (@ViewBag.TicketPrice.ToString("C"))
                            </button>
                        }
                        else
                        {
                            <a href="@Url.Action("SignIn", "Login", new { area = "Member" })" class="btn dorne-btn w-100">
                                <i class="fa fa-sign-in pr-3"></i> Giriş Yap ve Bilet Al
                            </a>
                        }

                    </div>

                    <!-- Opening Hours Widget -->
                    <div class="opening-hours-widget mt-3">
                        <h6 style="color:white">Açılış Saati</h6>
                        <ul class="opening-hours text-center">
                            <li>
                                <p style="color:white">@Model.EventDate.ToString("HH:mm")</p>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
        </div>
    </section>

  
    <!-- Ödeme Modalı -->
    <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel">Ödeme</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Kart Görünümü -->
                    <div id="paymentCardPreview">
                        <div class="card-number" id="cardNumberPreview">**** **** **** ****</div>
                        <div class="card-holder" id="cardHolderNamePreview">Kart Sahibinin Adı</div>
                        <div class="expires">Expires: <span id="expiryDatePreview">MM/YY</span></div>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/Mastercard-logo.png" class="card-logo" alt="Card Logo">
                    </div>

                    <!-- Kart Bilgileri Formu -->
                    <form method="post" action="@Url.Action("SaveCard", "Payment")">
                        <input type="hidden" name="EventId" value="@Model.EventId" />
                        <input type="hidden" name="EventTicketId" value="@Model.EventsTicketId" />

                        <!-- Kart Sahibinin Adı -->
                        <div class="mb-3">
                            <label for="cardHolderName" class="form-label">Kart Sahibinin Adı Soyadı</label>
                            <input type="text" class="form-control" id="cardHolderName" name="cardHolderName"
                                   placeholder="Kart Sahibinin Adı Soyadı" required oninput="updateCardPreview()" />
                        </div>

                        <!-- Kart Numarası -->
                        <div class="mb-3">
                            <label for="cardNumber" class="form-label">Kart Numarası</label>
                            <input type="text" class="form-control" id="cardNumber" name="cardNumber"
                                   placeholder="Kart Numarası (4-4-4-4)" maxlength="19"
                                   required oninput="formatCardNumber(event); updateCardPreview()" />
                            <small class="form-text text-muted">Kart numarasını 4-4-4-4 formatında girin.</small>
                        </div>

                        <!-- Son Kullanma Tarihi -->
                        <div class="mb-3">
                            <label for="expiryDate" class="form-label">Son Kullanma Tarihi</label>
                            <input type="text" class="form-control" id="expiryDate" name="expiryDate"
                                   placeholder="MM/YY" maxlength="5"
                                   required oninput="formatExpiryDate(event); updateCardPreview()" />
                            <small class="form-text text-muted">Son kullanma tarihini MM/YY formatında girin.</small>
                        </div>

                        <!-- CVV -->
                        <div class="mb-3">
                            <label for="cvv" class="form-label">CVV</label>
                            <input type="text" class="form-control" id="cvv" name="cvv" placeholder="CVV (3 haneli)"
                                   pattern="^\d{3}$" maxlength="3" inputmode="numeric"
                                   required oninput="updateCardPreview()" />
                            <small class="form-text text-muted">CVV numarasını 3 haneli olarak girin.</small>
                        </div>

                        <!-- Kartı Kaydetme Seçeneği -->
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="true" id="saveCard" name="saveCard">
                            <label class="form-check-label" for="saveCard">
                                Kartımı Kaydet
                            </label>
                        </div>

                        <!-- Ödeme Butonu -->
                        <button type="submit" class="btn btn-success w-100 mt-3">Ödemeyi Tamamla</button>
                    </form>
                    <!-- Kayıtlı Kartlarla Ödeme Yap Linki -->
                    <div class="mb-3 text-center">
                        <a href="javascript:void(0);" class="text-primary" style="text-decoration: underline;" onclick="loadSavedCardModal()">
                            Kayıtlı Kartlarımla Ödeme Yapmak İstiyorum
                        </a>
                    </div>

                    <!-- Kayıtlı Kart Modalı -->
                    <div class="modal fade" id="savedCardModal" tabindex="-1" aria-labelledby="savedCardModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="savedCardModalLabel">Kayıtlı Kartlar</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div id="savedCardsList">
                                        <!-- Kayıtlı kartlar burada gösterilecek -->
                                    </div>
                                    <div class="mb-3 text-center">
                                        <a href="javascript:void(0);" class="text-primary" style="text-decoration: underline;" onclick="goBackToForm()">Ödeme Formuna Geri Dön</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

</body>

</html>



                    <script>
                        //function loadSavedCardModal() {
                        // Kayıtlı kartları backend'den al
                        fetch(/Payment/GetSavedCards)  // userId parametresi olmadan
                            .then(response => response.json())
                            .then(savedCards => {
                                let savedCardsHtml = '<h5>Kayıtlı Kartlarınız</h5>';
                                if (savedCards.length === 0) {
                                    savedCardsHtml += '<p>Kayıtlı kart bulunmamaktadır.</p>';
                                } else {
                                    savedCards.forEach(card => {
                                        savedCardsHtml += `
                                                <div class="card mb-3">
                                                    <div class="card-body">
                                                        <div>Kart Numarası: ${card.cardNumber.replace(/\d(?=\d{4})/g, "*")}</div>
                                                        <div>Kart Sahibi: ${card.cardHolderName}</div>
                                                        <div>Son Kullanma Tarihi: ${card.expiryDate}</div>
                                                        <button class="btn btn-primary" onclick="selectSavedCard(${card.savedCardId}, '${card.cardNumber}', '${card.cardHolderName}', '${card.expiryDate}')">Bu Kartla Ödeme Yap</button>
                                                    </div>
                                                </div>
                                            `;
                                    });
                                }
                                document.getElementById('savedCardsList').innerHTML = savedCardsHtml;
                                var modal = new bootstrap.Modal(document.getElementById('savedCardModal'));
                                modal.show();
                            })
                            .catch(error => {
                                console.error('Kayıtlı kartlar yüklenirken hata oluştu:', error);
                            });
                        }


                        // Kayıtlı kartı seç ve ödeme formunu güncelle
                        function selectSavedCard(savedCardId, cardNumber, cardHolderName, expiryDate) {
                            document.getElementById('cardNumberPreview').innerText = cardNumber;
                            document.getElementById('cardHolderNamePreview').innerText = cardHolderName;
                            document.getElementById('expiryDatePreview').innerText = expiryDate;

                            var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
                            modal.show();
                        }

                        // Ödeme formuna geri dön
                        function goBackToForm() {
                            var modalBody = document.querySelector('#paymentModal .modal-body');
                            modalBody.innerHTML = `
                                                        <!-- Kart Görünümü -->
                                                        <div id="paymentCardPreview">
                                                            <div class="card-number" id="cardNumberPreview">**** **** **** ****</div>
                                                            <div class="card-holder" id="cardHolderNamePreview">Kart Sahibinin Adı</div>
                                                            <div class="expires">Expires: <span id="expiryDatePreview">MM/YY</span></div>
                                                            <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/Mastercard-logo.png" class="card-logo" alt="Card Logo">
                                                        </div>

                                                        <!-- Kart Bilgileri Formu -->
                                                        <form method="post" action="@Url.Action("SaveCard", "Payment")">
                                                            <!-- Kart Bilgileri Burada... -->
                                                            <button type="submit" class="btn btn-success w-100 mt-3">Ödemeyi Tamamla</button>
                                                        </form>
                                                    `;
                        }
                    </script>


                    <!-- Bootstrap JS -->
                    <script>
                        // Kayıtlı kart ödeme kısmını modalın içerisine yükle


                        // Kayıtlı kart seçildiğinde ödeme bilgilerini güncelle
                        function selectSavedCard(cardNumber, cardHolderName, expiryDate) {
                            document.getElementById('cardNumberPreview').innerText = cardNumber;
                            document.getElementById('cardHolderNamePreview').innerText = cardHolderName;
                            document.getElementById('expiryDatePreview').innerText = expiryDate;

                            var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
                            modal.show();
                        }

                        // Ödeme formuna geri dön
                        function goBackToForm() {
                            var modalBody = document.querySelector('#paymentModal .modal-body');

                            // Formu tekrar yükleyin
                            modalBody.innerHTML = `
                                        <!-- Kart Görünümü -->
                                        <div id="paymentCardPreview">
                                            <div class="card-number" id="cardNumberPreview">**** **** **** ****</div>
                                            <div class="card-holder" id="cardHolderNamePreview">Kart Sahibinin Adı</div>
                                            <div class="expires">Expires: <span id="expiryDatePreview">MM/YY</span></div>
                                            <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/Mastercard-logo.png" class="card-logo" alt="Card Logo">
                                        </div>

                                        <!-- Kart Bilgileri Formu -->
                                        <form method="post" action="@Url.Action("SaveCard", "Payment")">
                                            <!-- Kart Bilgileri Burada... -->
                                            <button type="submit" class="btn btn-success w-100 mt-3">Ödemeyi Tamamla</button>
                                        </form>
                                    `;
                        }

                        // Kart numarasını 4-4-4-4 formatında düzenleyen fonksiyon
                        function formatCardNumber(event) {
                            let input = event.target;
                            let value = input.value.replace(/\D/g, ''); // Sayılardan başka her şeyi sil
                            if (value.length > 16) {
                                value = value.substring(0, 16); // 16 haneli karta izin ver
                            }
                            let formattedValue = '';
                            for (let i = 0; i < value.length; i++) {
                                if (i > 0 && i % 4 === 0) {
                                    formattedValue += ' '; // 4 rakamda bir boşluk ekle
                                }
                                formattedValue += value[i];
                            }
                            input.value = formattedValue;
                        }

                        // Son kullanma tarihini MM/YY formatına getir
                        function formatExpiryDate(event) {
                            let input = event.target;
                            let value = input.value.replace(/\D/g, ''); // Sadece sayılar
                            if (value.length > 4) {
                                value = value.substring(0, 4);
                            }
                            let formattedValue = '';
                            if (value.length > 2) {
                                formattedValue = value.slice(0, 2) + '/' + value.slice(2, 4);
                            } else {
                                formattedValue = value;
                            }
                            input.value = formattedValue;
                        }

                        // Kart bilgilerini önizlemede güncelle
                        function updateCardPreview() {
                            document.getElementById('cardNumberPreview').innerText = document.getElementById('cardNumber').value || '**** **** **** ****';
                            document.getElementById('cardHolderNamePreview').innerText = document.getElementById('cardHolderName').value || 'Kart Sahibinin Adı';
                            document.getElementById('expiryDatePreview').innerText = document.getElementById('expiryDate').value || 'MM/YY';
                        }
                    </script>

                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


<style>

    .modal-content {
        border-radius: 15px;
        background-color: #f9f9f9;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        border-bottom: none;
    }

    .modal-title {
        font-weight: bold;
        font-size: 20px;
        color: #333;
    }

    #paymentCardPreview {
        background: linear-gradient(135deg, #222831, #393E46);
        color: #fff;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
    }

        #paymentCardPreview .card-number {
            font-size: 18px;
            letter-spacing: 3px;
            margin-bottom: 10px;
        }

        #paymentCardPreview .card-holder,
        #paymentCardPreview .expires {
            font-size: 14px;
            opacity: 0.8;
        }

        #paymentCardPreview .card-logo {
            position: absolute;
            bottom: 20px;
            right: 20px;
            height: 40px;
        }

    .btn-success {
        background-color: #5e72e4;
        border: none;
        font-size: 16px;
        font-weight: bold;
    }

        .btn-success:hover {
            background-color: #4a60d2;
        }

    .form-control {
        border-radius: 8px;
        border: 1px solid #ddd;
        padding: 10px;
    }


    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f9f9f9;
        color: #333;
        margin: 0;
        padding: 0;
    }

    .event-detail-container {
        display: flex;
        justify-content: center;
        padding: 50px 0;
    }

    .event-detail-wrapper {
        width: 90%;
        max-width: 1200px;
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    /* Event Image */
    .event-image {
        width: 100%;
        max-width: 400px;
        margin-bottom: 10px;
    }

        .event-image img {
            width: 100%;
            height: auto;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

    /* Event Content */
    .event-content {
        flex: 1;
        max-width: 700px;
    }

    .event-title {
        font-family: 'Montserrat', sans-serif;
        font-size: 36px;
        color: rgba(139, 0, 0, 0.99);
        margin-bottom: 20px;
    }

    .event-overview {
        margin-bottom: 30px;
    }

    .event-description, .event-details {
        font-size: 18px;
        line-height: 1.6;
    }

    .event-date {
        font-size: 20px;
        font-weight: 600;
        color: rgba(139, 0, 0, 0.99);
        margin-top: 20px;
    }

    .event-location {
        font-size: 18px;
        font-weight: 500;
        margin-top: 30px;
    }

    .event-map {
        margin-top: 20px;
    }

        .event-map iframe {
            border-radius: 8px;
        }

    /* Sidebar */
    .event-sidebar {
        width: 100%;
        max-width: 350px;
    }

    .listing-verify {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    /* Giriş Yap ve Bilet Al Button */
    .btn-login, .btn-buy {
        background-color: rgba(139, 0, 0, 0.99);
        color: #fff;
        font-size: 18px;
        padding: 15px;
        text-align: center;
        margin-top: 15px;
        width: 100%;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-login:hover, .btn-buy:hover {
            background-color: rgba(139, 0, 0, 0.75);
        }

    /* Opening Hours Widget */
    .opening-hours-widget {
        background-color: rgba(139, 0, 0, 0.99);
        padding: 15px;
        margin-top: 10px;
        width: 100%;
    }

        .opening-hours-widget h6 {
            color: white;
            margin-bottom: 10px;
        }

        .opening-hours-widget .opening-hours {
            list-style-type: none;
            padding: 0;
            text-align: center;
        }

            .opening-hours-widget .opening-hours li p {
                color: white;
            }
</style>